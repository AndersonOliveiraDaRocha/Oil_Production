system("ls")
a = "teste de texto"
print x
print(x)
lenght(x)
lenght(x)
length(x)
x=c(4,3,3,4,3,1)
length(x)
y = vector(mode="logical",lenght=4)
y = vector(mode="logical",length=4)
y
Z = vector(length=3,mode='numeric')
z
z
Z = vector(length=3,mode='numeric')
z
q = rep(3.2,times=10)
w = seq(0,1,by=0.1)
w = seq(0,1,length.out =11)
w = seq(0,1,length.out =11)
print
library(ggplot2)
data(diamonds)
summary(diamonds)
?diamonds
diamonds$color
qplot(x=diamonds$price,data=diamonds)
names(diamonds)
# Verifcando quando é o diretório atual de trabalho
getwd()
source('~/UDACITY/Nanodegree Data Scientist/Aulas de R/Facebook/Aula_R_Facebook/Aula_R_Facebook.R', encoding = 'UTF-8', echo=TRUE)
setwd('C:\\Users\\Anderson\\Documents\\UDACITY\\Nanodegree Data Scientist\\Aulas de R\\Facebook\\Aula_R_Facebook\\')
source('~/UDACITY/Nanodegree Data Scientist/Aulas de R/Facebook/Aula_R_Facebook/Aula_R_Facebook.R', encoding = 'UTF-8', echo=TRUE)
install.packages("ggplot2")
source('~/UDACITY/Nanodegree Data Scientist/Aulas de R/Facebook/Aula_R_Facebook/Aula_R_Facebook.R', encoding = 'UTF-8', echo=TRUE)
getwd()
summary(diamonds$price)
sum(diamonds$price<500)
sum(diamonds$price<250)
sum(diamonds$price>=15000)
qplot(x=diamonds$price,data=diamonds)
qplot(x=diamonds$price,data=diamonds,xlim = c(0,5000),breaks=(0,5000,100))
qplot(x=diamonds$price,data=diamonds,xlim = c(0,5000),breaks=c(0,5000,100))
qplot(x=diamonds$price,data=diamonds)+
scale_x_continuous(breaks = seq(0,10000,100),limits = c(0,10000))
qplot(x=diamonds$price,data=diamonds)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))
qplot(x=diamonds$price,data=diamonds,binwidth=100)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))
qplot(x=diamonds$price,data=diamonds, binwidth= 1000)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))
qplot(x=diamonds$price,data=diamonds, binwidth= 500)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))
qplot(x=diamonds$price,data=diamonds, binwidth= 250)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))
qplot(x=diamonds$price,data=diamonds, binwidth= 1)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))
qplot(x=diamonds$price,data=diamonds, binwidth= 100)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))
getwd()
setwd('C:\Users\Anderson\Documents\UDACITY\Nanodegree Data Scientist\Aulas de R\Diamonds\Aula_R_Diamonds\')
setwd('C:\\Users\\Anderson\\Documents\\UDACITY\\Nanodegree Data Scientist\\Aulas de R\\Diamonds\\Aula_R_Diamonds\\')
qplot(x=diamonds$price,data=diamonds, binwidth= 100)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))
ggsave('Diamonds_Price')
ggsave('Diamonds_Price.png')
qplot(x=diamonds$price,data=diamonds, binwidth= 100)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))+
facet_wrap(~cut)
by(diamonds$prices,diamonds$cut,summary)
by(diamonds$prices,diamonds$cut,summary)
by(diamonds$price,diamonds$cut,summary)
by(diamonds$price,diamonds$cut,summary)
by(diamonds$price,diamonds$cut,summary)
names(diamonds)
by(diamonds$price,diamonds$cut,summary)
qplot(x=diamonds$price,y=diamonds$carat,data=diamonds, binwidth= 100)+
scale_x_continuous(breaks = seq(0,10000,1000),limits = c(0,10000))+
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds)+
facet_wrap(~cut)
diamonds$carat
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= gender) +
scale_x_continuous() +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat) +
scale_x_continuous() +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat) +
scale_x_continuous() +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat) +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat) +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat,binwidth=5) +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat,binwidth=100) +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat,binwidth=1000) +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat,binwidth=200) +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat,binwidth=1) +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat) +
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price,data=diamonds,geom = 'freqpoly',color= carat) +
scale_x_log10()
qplot(x=diamonds$price * diamonds$carat,data=diamonds)+
scale_x_log10() +
facet_wrap(~cut)
summary(diamonds)
names(diamonds)
?diamonds
qplot(x=diamonds$price / diamonds$carat,data=diamonds)+
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price / diamonds$carat,data=diamonds,binwidth=100)+
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price / diamonds$carat,data=diamonds,binwidth=10)+
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price / diamonds$carat,data=diamonds,binwidth=0.5)+
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price / diamonds$carat,data=diamonds,binwidth=0.01)+
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price / diamonds$carat,data=diamonds,binwidth=0.05)+
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price / diamonds$carat,data=diamonds,binwidth=0.02)+
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price / diamonds$carat,data=diamonds,binwidth=0.01)+
scale_x_log10() +
facet_wrap(~cut)
qplot(x=diamonds$price / diamonds$carat,data=diamonds,binwidth=0.01)+
scale_x_log10() +
facet_wrap(~cut)
ggsave('Quilate.png')
names(diamonds)
qplot(x = price, y = cut, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 200))
qplot(x = cut, y = price, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 200))
qplot(x = cut, y = price, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
summary(diamonds$price)
qplot(x = cut, y = price, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, 15000), breaks = seq(0, 15000, 1000))
qplot(x = cut, y = price, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, 15000), breaks = seq(0, 15000, 1000))
qplot(x = color, y = price, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, 15000), breaks = seq(0, 15000, 1000))
qplot(x = color, y = price, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, 15000), breaks = seq(0, 15000, 1000))
by(diamonds$price,diamonds$color,summary)
qplot(x = color, y = price, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, 15000), breaks = seq(0, 15000, 500))
by(diamonds$price,diamonds$color,summary)
?diamonds
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, 15000), breaks = seq(0, 15000, 500))
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, max(price/carat), breaks = seq(0, 15000, 500))
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(0, max(price/carat)), breaks = seq(0, 15000, 500))
max(diamonds$carat)
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(min(diamonds$carat),max(diamonds$carat) ), breaks = seq(0, 15000, 500))
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(m_,m) ), breaks = seq(m_, m, 1))
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(m_,m), breaks = seq(m_, m, 1))
m <- max(diamonds$carat)
m_ <- min(diamonds$carat)
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(m_,m), breaks = seq(m_, m, 1))
q_max <- max(diamonds$price/diamonds$carat)
q_max <- max(diamonds$price / diamonds$carat)
q_min <- min(diamonds$price / diamonds$carat)
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 1))
q_max <- max(diamonds$price / diamonds$carat)
q_min <- min(diamonds$price / diamonds$carat)
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 1))
q_max
print(q_max)
q_max <- max(diamonds$price / diamonds$carat)
q_min <- min(diamonds$price / diamonds$carat)
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 1))
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 100))
q_max <- max(diamonds$price / diamonds$carat)
q_min <- min(diamonds$price / diamonds$carat)
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 100))
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 100))
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 10))
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 10)) +
ylab('Percentual de Amigos')
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 1000)) +
ylab('Percentual de Amigos')
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 1500)) +
ylab('Percentual de Amigos')
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 1500)) +
ylab('Quilate')
qplot(x= carat,data= diamonds,geom = 'freqpoly')
qplot(x= carat,data= diamonds,geom = 'freqpoly')
qplot(x= carat,data= diamonds,geom = 'freqpoly',binwidth=0.5)
qplot(x= carat,data= diamonds,geom = 'freqpoly',binwidth=10)
qplot(x= carat,data= diamonds,geom = 'freqpoly',binwidth=0.1)
qplot(x= carat,data= diamonds,geom = 'freqpoly',binwidth=0.2)
qplot(x= carat,data= diamonds,geom = 'freqpoly',binwidth=0.3)
qplot(x= carat,data= diamonds,geom = 'freqpoly',binwidth=0.2)
qplot(x= carat,data= diamonds,geom = 'freqpoly',binwidth=0.1)
qplot(x= carat,data= diamonds,geom = 'freqpoly',binwidth=0.01)
install.packages(tidyr)
install.packages('tidyr')
install.packages('dplyr')
getwd()
setwd('C:\\Users\\Anderson\\Documents\\UDACITY\\Nanodegree Data Scientist\\Aulas de R\\Gap_Minder\\')
ds <- read.csv('oil_production_total.csv')
setwd('C:\\Users\\Anderson\\Documents\\UDACITY\\Nanodegree Data Scientist\\Aulas de R\\Gap_Minder\\')
ds <- read.csv('oil_production_total.csv')
setwd('C:\\Users\\Anderson\\Documents\\UDACITY\\Nanodegree Data Scientist\\Aulas de R\\Gap_Minder\\Gap_Minder\\')
ds <- read.csv('oil_production_total.csv')
names(ds)
ds <- read.csv('oil_production_total.csv')
names(ds)
qplot(x= geo,data= ds,geom = 'freqpoly')#,binwidth=0.01)
names(ds)
qplot(x = x2016  ,data= ds,geom = 'freqpoly')#,binwidth=0.01)
qplot(x = x2016,data= ds$geo,geom = 'freqpoly')#,binwidth=0.01)
summary(ds$X2016)
by(ds$geo,ds$X2016,Summary)
by(ds$geo,ds$X2016,summary)
by(ds$X2016,ds$geo,summary)
qplot(x = X2016,data= ds$geo,geom = 'freqpoly')#,binwidth=0.01)
qplot(x = X2016,data = ds,geom = 'freqpoly')#,binwidth=0.01)
qplot(x = X2016,data = ds,)#,binwidth=0.01)
qplot(x = color, y = price/carat, data = diamonds, geom = 'boxplot') +
scale_y_continuous(limits = c(q_min,q_max), breaks = seq(q_min,q_max, 1500)) +
ylab('Quilate')
source('~/UDACITY/Nanodegree Data Scientist/Aulas de R/Diamonds/Aula_R_Diamonds/Aula_R_Diamonds.R', encoding = 'UTF-8', echo=TRUE)
qplot(x=X2016,data=ds,binwidth=0.01)+
#scale_x_log10() +
facet_wrap(~geo)
qplot(x=X2016,data=ds)+
#scale_x_log10() +
facet_wrap(~geo)
geo_filter <- ds$geo == 'Brazil'
geo_filter
geo_filter <- ds$geo == 'Brazil'
geo_filter
geo_filter <- subset(ds,ds$geo == 'Brazil')
geo_filter
geo_filter <- subset(ds,ds$geo in ['Brazil','United States')
geo_filter <- subset(ds,ds$geo in ['Brazil','United States'])
subset?
subset
geo_filter <- subset(ds,ds$geo =='Brazil' | ds$geo == 'United States')
geo_filter
geo_filter <- subset(ds$X2016,(ds$geo =='Brazil' | ds$geo == 'United States'))
geo_filter
geo_filter <- subset(ds,(ds$geo =='Brazil' | ds$geo == 'United States'))
qplot(x=X2016,data=geo_filter)+
#scale_x_log10() +
facet_wrap(~geo)
qplot(x=geo_filter,data=geo_filter)+
#scale_x_log10() +
facet_wrap(~geo)
names(ds)
library(tidyr)
gather(ds,year,production)
ds_t <-- gather(ds,year,production)
ds_t
ds_t
names(ds)
ds_t <-- gather(ds,year,production,-geo)
ds_t
ds_t <-- gather(ds,year,production,-geo)
ds_t <- gather(ds,Year,Production,na.rm = FALSE,convert = TRUE)
ds_t
ds <- read.csv('oil_production_total.csv')
setwd('C:\\Users\\Anderson\\Documents\\UDACITY\\Nanodegree Data Scientist\\Aulas de R\\Gap_Minder\\Gap_Minder\\')
ds <- read.csv('oil_production_total.csv')
names(ds)
ds_t <- gather(ds,Geo,Year,Production,na.rm = FALSE,convert = TRUE)
ds_t <- gather(ds,Year,Production,na.rm = FALSE,convert = TRUE,factor_key = geo)
ds_t
ds_t <- gather(ds,Year,Production,na.rm = FALSE,convert = TRUE,factor_key = TRUE)
ds_t
ds <- read.csv('oil_production_total.csv')
ds_t <- gather(ds,Year,Production,-geo,na.rm = FALSE,convert = TRUE)
ds_t
ds_t$geo
ds_t
substr("abcdef", 2, 4)
substr("abcdef", 2, )
substr("abcdef", 2,: )
substr(ds_t$Year, 2,5 )
substr(ds_t$Year, 2,5 )
ds_t$Year <-- substr(ds_t$Year, 2,5)
ds_t$Anor <-- substr(ds_t$Year, 2,5)
ds_t$Year <- substr(ds_t$Year, 2,5)
ds_t
ds <- read.csv('oil_production_total.csv')
ds_t <- gather(ds,substr(Year, 2,5),Production,-geo,na.rm = FALSE,convert = TRUE)
getwd()
source('~/.active-rstudio-document', echo=TRUE)
ds_t
qplot(x=Production,data=ds_t)
qplot(x = Production, data = ds_t) +
facet_grid(~geo)
qplot(x = Production, data = ds_t) +
facet_grid(~geo=='Brazil')
qplot(x = Production, data = ds_t$geo)
qplot(x = Production, data = ds_t)
qplot(x = Production,y = Year, data = ds_t)
qplot(x = Year,y = Production, data = ds_t)
qplot(x = Year,y = Production, data = subset(ds_t,ds_t=='Brazil') )
qplot(x = Year,y = Production/1000, data = subset(ds_t,ds_t=='Brazil') )
qplot(x = Year,y = Production/10000, data = subset(ds_t,ds_t=='Brazil') )
qplot(x = Year,y = Production/1000000, data = subset(ds_t,ds_t=='Brazil') )
qplot(x = Year,y = Production/1000000, data = subset(ds_t,ds_t=='Brazil'))+
ylab('Produção em milhões de barris por ano')
qplot(x = Year,y = Production/1000000, data = subset(ds_t,ds_t=='Brazil'))+
ylab('Produção em milhões de barris por ano')+
xlab('Ano')
qplot(x = Year,y = Production/1000000, data = subset(ds_t,ds_t=='Brazil'))+
ylab('Produção em milhões de barris por ano')+
xlab('Ano')
qplot(x = Year,y = Production/1000000, data = subset(ds_t,ds_t=='Brazil'),geom = 'scatter')+
ylab('Produção em milhões de barris por ano')+
xlab('Ano')
qplot(x = Year,y = Production/1000000, data = subset(ds_t,ds_t=='Brazil'),geom = 'line')+
ylab('Produção em milhões de barris por ano')+
xlab('Ano')
qplot(x = Year,y = Production/1000000, data = subset(ds_t,ds_t=='Brazil'),geom = "line")+
ylab('Produção em milhões de barris por ano')+
xlab('Ano')
library(ggplot2)
ggplot(subset(ds_t,ds_t=='Brazil', aes('Year', 'Production')) +
geom_line()
ggplot(subset(ds_t,ds_t=='Brazil', aes('Year', 'Production')) +
geom_line()
ggplot(subset(ds_t,ds_t=='Brazil', aes('Year', 'Production')) + \
geom_line()
ggplot(aes(x = Year), data = subset(ds_t,ds_t=='Brazil') +
geom_line() +
scale_x_continuous(breaks = 1980:2016)
ggplot(aes(x = Year), data = subset(ds_t,ds_t=='Brazil') +
geom_line() +
scale_x_continuous(breaks = 1980:2016)
ggplot(aes(x = Year), data = subset(ds_t,ds_t=='Brazil')
ggplot(aes(x = Year), data = subset(ds_t,ds_t=='Brazil')
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil')
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil')
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil') +
geom_line()
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil'))
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil')) +
geom_line()
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil')) +
geom_line() +
scale_x_continuous(breaks = 1980:2016)
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil')) +
geom_line() +
scale_x_continuous(limits = c(1980, 2016), breaks = seq(1980, 2016, 5))
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil')) +
geom_line() +
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil')) +
geom_line()
ggplot(aes(x = Year,y =Production/1000000 ), data = subset(ds_t,ds_t=='Brazil')) +
geom_line()
ggplot(aes(x = Year,y =Production/1000000), data = subset(ds_t,ds_t=='Brazil')) +
geom_line()
ggplot(aes(x = Year,Y =Production/1000000), data = subset(ds_t,ds_t=='Brazil')) +
geom_line()
qplot(x = Year,y = Production/1000000, data = subset(ds_t,ds_t=='Brazil'),geom = "line")+
ylab('Produção em milhões de barris por ano')+
xlab('Ano')
qplot(x = Year,y = Production/1000000, data = subset(ds_t,ds_t=='Brazil'))+
ylab('Produção em milhões de barris por ano')+
xlab('Ano')
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000),group = 1)+
geom_line(color = "#00AFBB", size = 2)
ds_t$Year
type(ds_t$Year)
typeof(ds_t$Year)
type.convert()?
type.convert?
ds_t$Year <- as.numeric(ds_t$Year)
ds_t$Year <- as.numeric(as.character(ds_t$Year))
typeof(ds_t$Year)
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)
source('~/UDACITY/Nanodegree Data Scientist/Aulas de R/Gap_Minder/Gap_Minder/Oil_Production_Analysis.R', encoding = 'UTF-8', echo=TRUE)
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = ((Production/1000000)/12)))+
geom_line(color = "#00AFBB", size = 2)
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = (Production/1000000)))+
geom_line(color = "#00AFBB", size = 2)
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
laby("Produção em milhões de barris")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de barris")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de barris")
xlab("Ano")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de barris")+
xlab("Ano")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_bar(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de barris")+
xlab("Ano")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de barris")+
xlab("Ano")
ds_t$Production <- ds_t$Production*6.8412
ds_t$Production
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de BBOE (Barris de Óleo Equivalente)")+
xlab("Ano")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de BBOE (Barris de Óleo Equivalente)")+
xlab("Ano")+
title("PRODUÇÃO DE PETRÓLEO NO BRASIL AO LONGO DOS ANOS")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de BBOE (Barris de Óleo Equivalente)")+
xlab("Ano")+
labs("PRODUÇÃO DE PETRÓLEO NO BRASIL AO LONGO DOS ANOS")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de BBOE (Barris de Óleo Equivalente)")+
xlab("Ano")+
labs("PRODUÇÃO DE PETRÓLEO NO BRASIL AO LONGO DOS ANOS")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de BBOE (Barris de Óleo Equivalente)")+
xlab("Ano")+
ggtitle("PRODUÇÃO DE PETRÓLEO NO BRASIL AO LONGO DOS ANOS")
ggplot(data = subset(ds_t,ds_t=='Brazil'), aes(x = Year, y = Production/1000000))+
geom_line(color = "#00AFBB", size = 2)+
ylab("Produção em milhões de BBOE (Barris de Óleo Equivalente)")+
xlab("Ano")+
ggtitle("PRODUÇÃO DE PETRÓLEO NO BRASIL AO LONGO DOS ANOS")
